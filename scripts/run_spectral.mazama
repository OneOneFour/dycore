#!/bin/bash 
export MODULEPATH=/usr/local/modulefiles:/share/cees/modules/modulefiles:/opt/ohpc/pub/modulefiles
#ATM_DYCORES_RUN_DIR=/data2/cees/aditis2/dycore
#ATM_DYCORES_SRC_DIR=/data2/cees/aditis2/dycore
#
# yoder:
ATM_DYCORES_RUN_DIR=`cd ..;pwd`
ATM_DYCORES_SRC_DIR=`cd ..;pwd`
#
echo "*** ATM_DYCORES_RUN_DIR: ${ATM_DYCORES_RUN_DIR}"
#
PARTITION=twohour
#
module purge
module load anaconda3/
module load intel/19
module load openmpi_3/3.1.4
#NETCDF_INC=/share/cees/software/netcdf/intel19-openmpi4/include
#NETCDF_LIB=/share/cees/software/netcdf/intel19-openmpi4/lib64
module load netcdf/
module load netcdf-fortran/
#
# yoder: for improved portability, do we need Bob's anaconda/lib?
# /data/cees/clapp/anaconda3/lib:
#LD_LIBRARY_PATH="/data/cees/clapp/anaconda3/lib:/share/cees/software/netcdf/intel19-openmpi4/lib64:${LD_LIBRARY_PATH}"
LD_LIBRARY_PATH="/usr/lib64:${LD_LIBRARY_PATH}"
cd $ATM_DYCORES_RUN_DIR
#
# Minimal runscript: Spectral atmospheric core with Held-Suarez forcing
## set echo
set -x
#------------------------------------------------------
# define variables
platform=mazama  # A unique identifier for your platform
npes=8  # number of processors
workdir=$ATM_DYCORES_RUN_DIR/workdir  # where model is run and model output is produced
execdir=$ATM_DYCORES_RUN_DIR/exec_spectral.$platform  # code is compiled and executable located 
template=$ATM_DYCORES_RUN_DIR/bin/mkmf.template.$platform   # path to template for your platform
mkmf=$ATM_DYCORES_RUN_DIR/bin/mkmf                      # path to executable mkmf
sourcedir=$ATM_DYCORES_SRC_DIR/src  # path to directory containing model source code
pathnames=$ATM_DYCORES_RUN_DIR/input/spectral_pathnames  # path to file containing list of source paths
namelist=$ATM_DYCORES_RUN_DIR/input/spectral_namelist       # path to namelist file
diagtable=$ATM_DYCORES_RUN_DIR/input/hs_diag_table           # path to diagnositics table
fieldtable=$ATM_DYCORES_RUN_DIR/input/spectral_field_table   # path to field table (specifies tracers)
mppnccombine=$ATM_DYCORES_SRC_DIR/bin/mppnccombine.$platform # path to executable mppnccombine
#-----------------------------------------------------
# compile mppnccombine.c, needed only if $npes > 1
if [ ! -f $mppnccombine ]; then
  $CC -O -o $mppnccombine -I$NETCDF_INC -L$NETCDF_LIB ./postprocessing/mppnccombine.c -lnetcdf
fi
#----------------------------------------------------
# setup directory structure
if [ ! -d $execdir ]; then  mkdir $execdir ; fi
#
if [[ -e $workdir ]]; then rm -rf ${workdir}; fi
if [ -e $workdir ]; then
  echo "ERROR: Existing workdir may contaminate run.  Move or remove $workdir and try again."
  exit 1
  #if [[ -e $workdir ]]; then rm -rf ${workdir}; fi
fi
mkdir $workdir $workdir/INPUT $workdir/RESTART
#---------------------------------------------------
# compile the model code and create executable
cd $execdir
$mkmf -p fms.x -t $template -c "-Duse_libMPI -Duse_netCDF" -a $sourcedir $pathnames

make clean
make -f Makefile

#exit 1

cd $workdir
#--------------------------------------------------
# set run length and time step, get input data and executable
cat > input.nml <<EOF
 &main_nml
     days   = 100,
     dt_atmos = 600 /
EOF
cat $namelist >> input.nml
cp $diagtable diag_table
cp $fieldtable field_table
cp $execdir/fms.x fms.x

#exit 1
##--------------------------------------------------
## run the model with mpirun
##mpirun -np $npes $ATM_DYCORES_DIR/workdir/fms.x
#mpirun -machinefile $PBS_NODEFILE -np $npes $ATM_DYCORES_DIR/workdir/fms.x
##-------------------------------------------------
## combine netcdf files
#if [ $npes -gt 1 ]; then
#  for ncfile in $( /bin/ls *.nc.0000 )
#  do
#    $mppnccombine -v -r $ncfile
#  done
#fi
#exit 1
echo "now create a submit script and run something..."
pwd

if [[ -d submit.sh ]]; then
    rm -f submit.sh
fi
#
cat << EOF  >submit.sh
#!/bin/bash
#SBATCH --job-name=dycore
#SBATCH --ntasks=${npes}
#SBATCH --ntasks-per-node=${npes}
#SBATCH --partition=${PARTITION}
#SBATCH --chdir=${workdir}
#SBATCH --output=${workdir}/outfile.%j.out
#SBATCH --error=${workdir}/outfile.%j.err
module load intel/19
module load openmpi_3/3.1.4
#
module load netcdf/
module load netcdf-fortran/
# /data/cees/clapp/anaconda3/lib:
#export LD_LIBRARY_PATH="/data/cees/clapp/anaconda3/lib:/share/cees/software/netcdf/intel19-openmpi4/lib64:\${LD_LIBRARY_PATH}"
LD_LIBRARY_PATH="/usr/lib64:${LD_LIBRARY_PATH}"
ATM_DYCORES_DIR=${ATM_DYCORES_RUN_DIR}
cd \$SLURM_SUBMIT_DIR/../workdir
mpirun  -np ${npes} \$ATM_DYCORES_DIR/workdir/fms.x
EOF

#
echo "submit.sh should be created..."
#
#exit 1

#cd ${workdir}
sbatch submit.sh
